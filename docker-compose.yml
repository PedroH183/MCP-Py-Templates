services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health"]
      interval: 10s
      timeout: 5s
      retries: 10

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy

  etl:
    build: ./etl
    container_name: etl_produtos
    depends_on:
      adventure_db:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    environment:
      - PGHOST=host.docker.internal
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - PGDATABASE=Adventureworks
      - PGPORT=5433
      - ES_HOST=http://elasticsearch:9200
    extra_hosts:
      - "host.docker.internal:host-gateway"

  adventure_db:
    build: ./etl/init
    container_name: adventure_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DATABASE=Adventureworks
      - POSTGRES_PORT=5433
    ports:
      - "5433:5432"

volumes:
  es_data:
